{"version":3,"sources":["tree/Tree.jsx"],"names":["React","RcTree","TreeNode","classNames","DirectoryTree","ConfigConsumer","collapseMotion","renderSwitcherIcon","Tree","arguments","setTreeRef","node","tree","renderTree","getPrefixCls","props","customizePrefixCls","prefixCls","className","showIcon","showLine","switcherIcon","blockNode","children","checkable","nodeProps","Component","defaultProps","motion","motionAppear"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,MAAP,IAAiBC,QAAjB,QAAiC,SAAjC;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAASC,cAAT,QAA+B,oBAA/B;AACA,OAAOC,cAAP,MAA2B,iBAA3B;AACA,OAAOC,kBAAP,MAA+B,kBAA/B;;IACqBC,I;;;;;AACjB,kBAAc;AAAA;;AAAA;;AACV,+EAASC,SAAT;;AACA,UAAKC,UAAL,GAAkB,UAACC,IAAD,EAAU;AACxB,YAAKC,IAAL,GAAYD,IAAZ;AACH,KAFD;;AAGA,UAAKE,UAAL,GAAkB,gBAAsB;AAAA;;AAAA,UAAnBC,YAAmB,QAAnBA,YAAmB;;AAAA;AAAA,UAC5BC,KAD4B,yBAC5BA,KAD4B;;AAAA,UAEjBC,kBAFiB,GAEyED,KAFzE,CAE5BE,SAF4B;AAAA,UAEGC,SAFH,GAEyEH,KAFzE,CAEGG,SAFH;AAAA,UAEcC,QAFd,GAEyEJ,KAFzE,CAEcI,QAFd;AAAA,UAEwBC,QAFxB,GAEyEL,KAFzE,CAEwBK,QAFxB;AAAA,UAEkCC,aAFlC,GAEyEN,KAFzE,CAEkCM,YAFlC;AAAA,UAEgDC,SAFhD,GAEyEP,KAFzE,CAEgDO,SAFhD;AAAA,UAE2DC,QAF3D,GAEyER,KAFzE,CAE2DQ,QAF3D;AAAA,UAG5BC,SAH4B,GAGdT,KAHc,CAG5BS,SAH4B;AAIpC,UAAMP,SAAS,GAAGH,YAAY,CAAC,MAAD,EAASE,kBAAT,CAA9B;AACA,aAAQ,oBAAC,MAAD;AAAQ,QAAA,GAAG,EAAE,MAAKN;AAAlB,SAAkCK,KAAlC;AAAyC,QAAA,SAAS,EAAEE,SAApD;AAA+D,QAAA,SAAS,EAAEd,UAAU,CAACe,SAAD,4DACpFD,SADoF,iBAC5D,CAACE,QAD2D,0CAEpFF,SAFoF,kBAE3DK,SAF2D,gBAApF;AAGJ,QAAA,SAAS,EAAEE,SAAS,GAAG;AAAM,UAAA,SAAS,YAAKP,SAAL;AAAf,UAAH,GAAuDO,SAHvE;AAGkF,QAAA,YAAY,EAAE,sBAACC,SAAD;AAAA,iBAAelB,kBAAkB,CAACU,SAAD,EAAYI,aAAZ,EAA0BD,QAA1B,EAAoCK,SAApC,CAAjC;AAAA;AAHhG,UAIXF,QAJW,CAAR;AAMH,KAXD;;AALU;AAiBb;;;;6BACQ;AACL,aAAO,oBAAC,cAAD,QAAiB,KAAKV,UAAtB,CAAP;AACH;;;;EArB6Bb,KAAK,CAAC0B,S;;SAAnBlB,I;AAuBrBA,IAAI,CAACN,QAAL,GAAgBA,QAAhB;AACAM,IAAI,CAACJ,aAAL,GAAqBA,aAArB;AACAI,IAAI,CAACmB,YAAL,GAAoB;AAChBH,EAAAA,SAAS,EAAE,KADK;AAEhBL,EAAAA,QAAQ,EAAE,KAFM;AAGhBS,EAAAA,MAAM,EAAE,SAAc,SAAc,EAAd,EAAkBtB,cAAlB,CAAd,EAAiD;AAAEuB,IAAAA,YAAY,EAAE;AAAhB,GAAjD,CAHQ;AAIhBP,EAAAA,SAAS,EAAE;AAJK,CAApB","sourcesContent":["import * as React from 'react';\nimport RcTree, { TreeNode } from 'rc-tree';\nimport classNames from 'classnames';\nimport DirectoryTree from './DirectoryTree';\nimport { ConfigConsumer } from '../config-provider';\nimport collapseMotion from '../_util/motion';\nimport renderSwitcherIcon from './utils/iconUtil';\nexport default class Tree extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.setTreeRef = (node) => {\n            this.tree = node;\n        };\n        this.renderTree = ({ getPrefixCls }) => {\n            const { props } = this;\n            const { prefixCls: customizePrefixCls, className, showIcon, showLine, switcherIcon, blockNode, children, } = props;\n            const { checkable } = props;\n            const prefixCls = getPrefixCls('tree', customizePrefixCls);\n            return (<RcTree ref={this.setTreeRef} {...props} prefixCls={prefixCls} className={classNames(className, {\n                [`${prefixCls}-icon-hide`]: !showIcon,\n                [`${prefixCls}-block-node`]: blockNode,\n            })} checkable={checkable ? <span className={`${prefixCls}-checkbox-inner`}/> : checkable} switcherIcon={(nodeProps) => renderSwitcherIcon(prefixCls, switcherIcon, showLine, nodeProps)}>\n        {children}\n      </RcTree>);\n        };\n    }\n    render() {\n        return <ConfigConsumer>{this.renderTree}</ConfigConsumer>;\n    }\n}\nTree.TreeNode = TreeNode;\nTree.DirectoryTree = DirectoryTree;\nTree.defaultProps = {\n    checkable: false,\n    showIcon: false,\n    motion: Object.assign(Object.assign({}, collapseMotion), { motionAppear: false }),\n    blockNode: false,\n};\n"],"file":"Tree.js"}